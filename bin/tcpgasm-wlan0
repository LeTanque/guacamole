#!/bin/bash
# tcpgasm  |  display the flow of packets of a network device in the terminal 
#	for real-time monitoring
# USAGE: you will need to adjust the interface below as needed. 
# OPTIONS: Visit the man page for more info. 
# CONTROL OF SCANNERS:
#				-e http - enable scanner http
#				-e md5 - enable scanner md5
#				-e netviz - enable scanner netviz
#				-e wifiviz - enable scanner wifiviz
#				-x tcpdemux - disable scanner tcpdemux
# SETTABLE OPTIONS:
#				-S name=value  Set a configuration parameter (-hh for info)#
#				-S enable_report=YES    Enable report.xml ()
#				-S http_cmd=    Command to execute on each HTTP attachment (http)
#				-S http_alert_fd=-1    File descriptor to send information about completed HTTP attachments (http)
#				-S netviz_histogram_dump=0    Dumps the histogram (netviz)
#				-S netviz_histogram_size=1000    Maximum histogram size (netviz)
#				-S tcp_timeout=0    Timeout for TCP connections (tcpdemux)
#				-S check_fcs=YES    Require valid Frame Check Sum (FCS) (wifiviz)

DEV="-i wlan0"	# interface to use 
NAME="http"		# scanner name, for use with variable $E or $EE
A="a"			# all post processing
C="c"			# Console print with no stored data
E="-e $NAME"	# Enable scanner $NAME
EE="-E $NAME" 	# Disable all scanners and then enable scanner $NAME
J="J"			# !OLD! Multi-color: client->server (blue) server->client(red) unknown(green)
G="g"			# Multi-color: client->server (blue) server->client(red) unknown(green)
S="s"			# strip non-printable
D="-d 3"		# debug level. Default is 1. 

printf "tcpgasm \n" | figlet -ck
printf "\n"
printf "          tcpflow -$C$G $E $DEV\n"
printf "          Console print only, multicolor, $DEV scanner"
printf "\n\n"
sleep 2
sudo tcpflow -$C$G $E $DEV