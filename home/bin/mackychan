#!/bin/sh
# Mac Mangle. Interface down, change mac, back up.
## USAGE : Input your desired MAC address & make sure to enable the options 
### you wish to use. Fill in your text editor, location of script.
## -s = show
export LANG="en_US.UTF-8"
export LANGUAGE="en_US:en"
MACKYHOME="/home/tank/bin/mackychan"
EDITOR="subl -n"
MACKYCHAN="macchanger"
SHOWMAC="macchanger -s"
SUDO="sudo -n"
SUDOV="sudo -v"
SU="sudo"
DEVICE="wlan0"

# This is the mac you will be changing too if you decide to explicitely 
## change the mac. If you don't choose to change the mac, this does nothing
#MAC="AC:FD:EC:13:43:A0"	# Apple inc., hootoos lan mac, for some reason
#MAC="38:0F:4A:BE:C1:16"
#MAC="7C:DD:90:82:81:DB"  #Possibly authenticated
#MAC="E8:99:C4:95:36:DB"  #HTCone authenticated
#MAC="68:1C:A2:06:65:95"  #Rosewill device, unknown authentication
#MAC="BC:4C:C4:B5:4E:76"
#MAC="E6:95:6E:40:64:85"
#MAC="e4:95:6e:40:64:85"  #On archer for a while, authenticated
#MAC="F4:F2:6D:AE:F8:75"  #TP-link Archer C7 5ghz antenna possibly authenticated 
#MAC="F4:F2:6D:AE:F8:73"  #TP-link Archer C7 
#MAC="F4:F2:6D:DD:DD:BF"  #TP-link 3020
#MAC="a4:2b:b0:b4:35:aa"	#TP-Link 3020
#MAC="D8:50:E6:D7:24:4E"
#MAC="D8:50:E6:D7:24:4F"
#MAC="EC-08-6B-B3-54-55"	#TP-Link 3040
#MAC="00:1A:2B:3C:FF:02"  
#MAC="00:21:CC:BE:87:E2"	#Lenovo ThinkPad T420 wlan0 "t333"
#MAC="52:54:00:f7:97:5a"	#VMware
#MAC="00:0F:13:03:10:9E"	#Etekcity USB WiFi adapter
#MAC="14:DA:E9:8E:63:3A"	#ASUS RT-N12 Wireless eth1
#MAC="00:1C:C2:1A:75:9C"	# PURE HooToo HT TM 02 wlan0
#MAC="00:1C:C2:1A:75:9D"	# PURE HooToo HT TM 02 eth0 & eth0.1

#OPTION="-m $MAC"
## These are the options to enable for default and random mac
## -r = random | -p = permanent default | -m = explicit MAC | -e = don't change vendor
#OPTION="-p"
#OPTION="-r"
OPTION="-e"

## Enable one of these devices to change it's mac
#DEVICE="wlan0"
#DEVICE="wlan1"
#DEVICE="wlan4"
#DEVICE="wlan5"
#DEVICE=" eth0"
#DEVICE=" eth1"
#DEVICE=" eth2"
#DEV="$DEVICE | $DEVY"
#DEVY=($("echo $DEVICE | sed -n 's/$DEVICE/.../ip'" <<< "$DEV"))
#DEV="echo $DEVY"
#DEVY=$(rfkill unblock $DEVICE | sed -n 's/"$DEVICE"/..../p')
#DEVI=$(sed -n 's/"$DEVICE"/..../p' <<< "$DEVICE")


###########################################################
# Begin
###########################################################
$SUDOV
printf "mackychan\n" | figlet -xf smslant
printf "\n➜ $MAC, original, or random mac address targeted \n"
sleep 0.5
printf "Bringing VPN and $DEVICE down\n"
$SU killall mullvad
$SU killall openvpn
$SU killall mtunnel
$SUDO ifconfig $DEVICE down
printf "$DEVICE current MAC\n"
$SHOWMAC $DEVICE
$SUDO $MACKYCHAN $OPTION $DEVICE
printf "\n➜ verify \n"
printf "MAC changed, now restarting network manager processes\n"
$SUDO service network-manager restart
$SUDO service networking restart
$SUDO service network-manager restart
printf ". " && sleep 0.5 && printf ". \n" && sleep 0.5
ip link | sed -n 's/..:..:..:..:..:../&/ip'
printf "$DEVICE new MAC\n"
$SHOWMAC $DEVICE
printf "\n➜ unblock + up \n"
printf "... \n"
sleep 0.5
printf "rfkill list all. \n"
rfkill list all
printf "... \n"
printf "Now let's unblock stuff "
sleep 0.5
$SUDO rfkill unblock all
printf "\n..... \n"
sleep 0.5
#$SUDO rfkill unblock "$DEV"
printf "\n....... \n"
$SUDO ifconfig $DEVICE up
ifconfig $DEVICE
$SUDO ifconfig $DEVICE up
iwconfig $DEVICE
rfkill list all  |  grep "yes"
printf "      ◼◼◼ end ◼◼◼ \n"
exit $?
